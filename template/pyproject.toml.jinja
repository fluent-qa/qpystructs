[build-system]
requires = ["mina-build>=0.2.5"]
build-backend = "pdm.backend"

#[build-system]
#requires = ["pdm-backend", "pdm-polylith-workspace"]
#build-backend = "pdm.backend"

[project]
authors = [
    { name = "{{author_name}}", email = "{{author_email}}" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
]
description = "{{project_description}}"
dynamic = [
  "version",
]
keywords = [
  "copier-template",
  "full-development-lifecycle",
  "project-template",
  "scaffold",
]
license = {text = "UNDEFINED"}
name = "{{project_name}}"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    #   "pydantic-settings",
    #   "typer[all]",
    "dynaconf>=3.2.5",
    "pydantic>=2.7.4",
]

[tool.pdm.scripts]
# ss-python-cli = "ss_python.cli:app"
lint = "ruff ."
fmt = "ruff format . --check"
test = "pytest "
docs = "mkdocs serve"
docs-deploy ="mkdocs gh-deploy --force"
cleanup = "sh scripts/cleanup.sh"

[project.urls]
issue = "https://github.com/{{organization_name}}/{{repo_name}}/issues"
repository = "https://github.com/{{organization_name}}/{{repo_name}}"

[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
docs = [
    "mkdocs-material>=9.5.27",
    "mkdocs>=1.6.0",
]

lint = [
    "ruff>=0.4.9"
]
test = [
    "pytest-cov>=5.0.0",
]


[tool.pytest.ini_options]
addopts = "-l -s --durations=0"
log_cli = true
log_cli_level = "info"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_format = "%(asctime)s %(levelname)s %(message)s"
minversion = "6.0"
cov="qpytpl"
cov-report="html"

[tool.coverage]

[tool.coverage.report]
fail_under = 100

[tool.coverage.run]
source = [
  "src/qpytpl",
]

[tool.mypy]
check_untyped_defs = true
disallow_any_unimported = true
disallow_untyped_defs = true
enable_error_code = [
  "ignore-without-code",
]
exclude = [
  "build",
  "template",
]
no_implicit_optional = true
show_error_codes = true
warn_return_any = true
warn_unused_ignores = true


[tool.ruff]
extend-exclude = [
  "template",
]
fix = true
src = ["src"]

[tool.ruff.lint]
select = [
  "B", # flake8-bugbear
  "D", # pydocstyle
  "E", # pycodestyle error
  "F", # Pyflakes
  "I", # isort
  "RUF100", # Unused noqa directive
  "S", # flake8-bandit
  "SIM", # flake8-simplify
  "UP", # pyupgrade
  "W", # pycodestyle warning
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.tomlsort]
all = true
in_place = true
trailing_comma_inline_array = true

[[tool.pdm.source]]
name = "mirrors"
url = "https://pypi.tuna.tsinghua.edu.cn/simple/"

[[tool.pdm.source]]
name = "douban"
url = "https://pypi.doubanio.com/simple/"


