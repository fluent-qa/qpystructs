[project]
authors = [
    { name = "fluentqa-team", email = "fluent-qa@fluentqa.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
description = "A Python boilet template for different types of projects."
dynamic = ["version"]
keywords = [
    "copier-template",
    "full-development-lifecycle",
    "project-template",
    "scaffold",
]
version = "0.0.1"
name = "qpystructs"
readme = "README.md"
requires-python = ">=3.11.*"
dependencies = [
    "pandas>=2.2.2",
    "pydantic>=2.8.2",
    "inflection>=0.5.1",
    "openpyxl>=3.1.5",
    "jmespath>=1.0.1",
    "pyyaml>=6.0.1",
    "DeepDiff>=7.0.1",
]

[project.urls]
issue = "https://github.com/fluent-qa/qpystructs/issues"
repository = "https://github.com/fluent-qa/qpystructs"


[tool]
[tool.pdm]
distribution = false
[tool.pdm.scripts]
# ss-python-cli = "ss_python.cli:app"
lint = "ruff ."
fmt = "ruff format . --check"
test = "pytest "
docs = "mkdocs serve"
docs-deploy = "mkdocs gh-deploy --force"
cleanup = "sh scripts/cleanup.sh"

[tool.pdm.dev-dependencies]
docs = ["mkdocs-material>=9.5.27", "mkdocs>=1.6.0"]
lint = ["ruff>=0.4.9"]
test = [
    "pytest-cov>=5.0.0",
    "pytest>=8.2.2",
]


[[tool.pdm.source]]
name = "mirrors"
url = "https://pypi.tuna.tsinghua.edu.cn/simple/"

[[tool.pdm.source]]
name = "douban"
url = "https://pypi.doubanio.com/simple/"

[tool.pytest.ini_options]
addopts = "-l -s --durations=0"
log_cli = true
log_cli_level = "info"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_format = "%(asctime)s %(levelname)s %(message)s"
minversion = "6.0"
cov = "qpystructs"
cov-report = "html"


[tool.coverage]

[tool.coverage.report]
fail_under = 100

[tool.coverage.run]
source = ["src/qpystructs"]


[tool.ruff]
extend-exclude = ["template"]
fix = true
src = ["src"]

[tool.ruff.lint]
select = [
    "B", # flake8-bugbear
    "D", # pydocstyle
    "E", # pycodestyle error
    "F", # Pyflakes
    "I", # isort
    "RUF100", # Unused noqa directive
    "S", # flake8-bandit
    "SIM", # flake8-simplify
    "UP", # pyupgrade
    "W", # pycodestyle warning
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "google"



[tool.tomlsort]
all = true
in_place = true
trailing_comma_inline_array = true

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
